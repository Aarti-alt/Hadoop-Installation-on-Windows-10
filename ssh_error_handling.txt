# ssh error handling - Follow the below codes if you encounter error connecting ssh to localhost

#ERROR-1: port-22 - connection refused

-open file to edit:
sudo nano /etc/ssh/sshd_config

- Delete the file content

- copy paste the sshd_config.txt file availabe in Hadoop-Installation-on-Windows-10.


-save and exit

- restart ssh:
sudo service ssh restart

- check connection:
ssh localhost

#ERROR-2: Try this if ssh still doesn't work


- Install an OpenSSH Server

In order to accept SSH connections, a machine needs to have the server-side part of the SSH software toolkit.

If you first want to check if OpenSSH server is available on the Ubuntu system of the remote computer that needs to accept SSH connections, you can try to connect to the local host:

Open the terminal on the server machine. You can either search for “terminal” or press CTRL + ALT + T on your keyboard.
Type in ssh localhost and hit enter.
For the systems without the SSH server installed the response will look similar to this:

username@host:~$ ssh localhost
ssh: connect to host localhost port 22: Connection refused username@host:~$


If the above is the case, you will need to install the OpenSSH server. Leave the terminal open and:

1. Run the following command to install the SSH server:
sudo apt-get install openssh-server ii.

2. Type in your superuser password when asked.
3. Enter and Y to allow the installation to continue after the disk space prompt.

The required support files will be installed, and then you can check if the SSH server is running on the machine by typing this command:

sudo service ssh status

- response will be:
* sshd is running

- another way to test:
ssh localhost


#ERROR-3: Could not load host key

-run the below commands

/usr/bin/ssh-keygen

OR use:

sudo ssh-keygen -b 1024 -t rsa -f /etc/ssh/ssh_host_key
sudo sh-keygen -b 1024 -t rsa -f /etc/ssh/ssh_host_rsa_key
sudo ssh-keygen -b 1024 -t dsa -f /etc/ssh/ssh_host_dsa_key
sudo ssh-keygen -b 521 -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key
sudo ssh-keygen -b 1024 -t ed25519 -f /etc/ssh/ssh_host_ed25519 _key



-Use the cat command to store the public key as authorized_keys in the ssh directory:
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys

-Set the permissions for your user with the chmod command:
chmod 0600 ~/.ssh/authorized_keys


After this-
sudo service ssh restart

-check status
sudo service ssh status
 - output would be: sshd is running


-Verify everything is set up correctly by using the hdoop user to SSH to localhost:
ssh localhost











